(ns io.hoplon.examples.bmi
  (:refer-hoplon :exclude [code])
  (:require-macros
   [bootstrap.code :as code]))

(defn demo []
  (let [bmi-height  (cell 180)
        bmi-weight  (cell 800)
        bmi         (cell= (let [h (/ bmi-height 100)
                                 w (/ bmi-weight 10)]
                             (/ w (* h h))))
        bmi-msg     (cell= (cond
                             (< bmi 18.5) ["underweight" "orange"]
                             (< bmi 25.0) ["normal"      "inherit"]
                             (< bmi 30.0) ["overweight"  "orange"]
                             :else        ["obese"       "red"]))]
    (div
      (form

        (div :class "form-group"
          (label
            (text "Height (~{bmi-height} cm)"))
          (input
            :input #(reset! bmi-height (deref %))
            :class "form-control"
            :type  "range"
            :min   0
            :max   250
            :value bmi-height))

        (div :class "form-group"
          (label
            (text "Weight (~(.toFixed (/ bmi-weight 10) 1) kg)"))
          (input
            :input #(reset! bmi-weight (deref %))
            :class "form-control"
            :type  "range"
            :min   0
            :max   1500
            :value bmi-weight))

        (div :class "form-group"
          (label
            (text "BMI ~(.toFixed bmi 1) (~(first bmi-msg))"))
          (input
            :css      (cell= {:background-color (second bmi-msg)})
            :readonly true
            :class    "form-control"
            :type     "range"
            :min      0
            :max      500
            :do-value (cell= (* bmi 10))))))))

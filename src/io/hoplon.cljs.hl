(ns io.hoplon
  (:require
   [bootstrap.panel :as panel]))

(def indexed (partial map-indexed list))

(defelem jump-to-toc
  [{:keys [states]} _]
  (a :class "topfix" :do-scroll-to (cell= (some zero? (map :cur states)))))

(defelem table-of-contents
  [{:keys [state]} _]
  (let [toc* (cell= (indexed (:state state)))]
    (ul :class "list-unstyled"
      (loop-tpl :bindings [[i title] toc*]
        (li
          (a
           :style "cursor:pointer;"
           :on-click #(do (swap! state assoc :cur nil)
                          (swap! state assoc :cur (inc @i)))
           (text "~{title}")))))))

(defelem gs-block
  [{:keys [state type title]} kids]
  (when state (swap! state update-in [:state] conj title))
  (panel/default :class (str "panel-" (name type))
    (when state
      (a
       :class "topfix"
       :do-scroll-to (cell= (= ~(count (:state @state)) (:cur state)))))
    (panel/heading
      (panel/title title))
    (panel/body
      kids
      (when state
        (div :style "text-align:center"
             (a :on-click #(do (swap! state assoc :cur nil)
                               (swap! state assoc :cur 0))
                "back to top"))))))

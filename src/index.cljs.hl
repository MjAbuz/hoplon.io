(page "index.html"
  (:require-macros
    [bootstrap.code              :as code])
  (:require
    [io.hoplon                   :as hoplon]
    [io.hoplon.content.home      :as home]
    [io.hoplon.content.getting-started :as getting-started]
    [io.hoplon.content.docs      :as docs]
    [io.hoplon.content.talks     :as talks]
    [io.hoplon.content.community :as community]
    [io.hoplon.content.shared    :refer [cqrs-url hoplon-url boot-url
                                         hoplon-clojars-url hoplon-demos-url
                                         bootstrap-url hoplon-group-url
                                         hoplon-issues-url hoplon-discourse-url
                                         copyright-footer]]
    [bootstrap.core              :as core]
    [bootstrap.page              :as page]
    [bootstrap.navbar            :as navbar]
    [tailrecursion.hoplon.util   :as hutil]))

(def route (hutil/route-cell 10 "#/home/"))

(defn hyphenate! []
  (.. (js/jQuery "p") (addClass "hyphenate") (css "text-align" "justify"))
  (.run js/Hyphenator))

(def-values
  [page-setup
   nav-bar
   content-home
   content-getting-started
   content-docs
   content-talks
   content-community]
  (page/navbar-fixed-top
    route
    "Hoplon"
    [(a :href "#/home/"                       "Home") (div)]
    [(a :href "#/getting-started/" "Getting Started") (core/container)]
    [(a :href "#/docs/"                       "Docs") (core/container)]
    [(a :href "#/talks/"            "Talking Hoplon") (core/container)]
    [(a :href "#/community/"  "Community/Contribute") (core/container)]))

(defc gs-tasks {:cur nil :toc []})
(defc hdocs  {:cur nil :toc []})
(defc htalks  {:cur nil :toc []})

(def gs-info (partial hoplon/gs-block :type :info))
(def gs-task (partial hoplon/gs-block :toc gs-tasks :type :primary))
(def hdoc  (partial hoplon/gs-block :toc hdocs  :type :primary))
(def htalk  (partial hoplon/gs-block :toc htalks  :type :info))

(defc example  1)

(add-initfn!
  (fn []
    (.track js/mixpanel (.. js/window -location -href))
    (hyphenate!)))

(html :lang "en"
  (head
    (meta :charset "utf-8")
    page-setup
    (meta :name "keywords"    :content "clojure, clojurescript, cqrs, castra, cljson, spa")
    (meta :name "description" :content "Hoplon provides a number of libraries promoting a simpler model for Clojure/ClojureScript web applications.")
    (title "Hoplon â€¢ A simpler way to program the web with Clojure and ClojureScript"))
  (body
    (nav-bar)
    (a :class "topfix" :do-scroll-to (cell= route))
    (noscript
      (div :class "nojs-error"
        "This page uses JavaScript but it looks like you have it turned off."))

    (content-home
      (home/show example))

    (content-getting-started
      (getting-started/show gs-task gs-tasks gs-info))

    (content-docs
      (docs/show hdoc hdocs))

    (content-talks
      (talks/show htalk htalks))

    (content-community
      (community/show))))
